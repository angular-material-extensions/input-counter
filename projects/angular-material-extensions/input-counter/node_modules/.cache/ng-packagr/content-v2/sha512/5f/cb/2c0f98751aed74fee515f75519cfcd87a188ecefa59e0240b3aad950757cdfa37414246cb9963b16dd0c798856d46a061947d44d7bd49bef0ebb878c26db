{"hash":"94b2c646520b3a907648467d3b67523e046d205a","fesm2020":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/material/form-field';\nimport * as i4 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i5 from '@angular/flex-layout';\nimport { FlexModule } from '@angular/flex-layout';\n\nclass InputCounterComponent {\n    constructor() {\n        this.step = 1;\n        this.appearance = 'standard';\n        this.label = 'Number';\n        this.change = new EventEmitter();\n        this.propagateChange = (_) => {\n        };\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        this.propagateChange(this._value);\n        this.change.emit(this._value);\n    }\n    ngOnInit() {\n    }\n    increment() {\n        if (!this.value) {\n            this.value = 0;\n        }\n        this.value += this.step;\n    }\n    decrement() {\n        if (!this.value) {\n            this.value = 0;\n        }\n        this.value -= this.step;\n    }\n    writeValue(obj) {\n        if (obj) {\n            this.value = obj;\n        }\n    }\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n    registerOnTouched(fn) {\n    }\n    setDisabledState(isDisabled) {\n    }\n}\nInputCounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: InputCounterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInputCounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.5\", type: InputCounterComponent, selector: \"mat-input-counter\", inputs: { _value: \"_value\", max: \"max\", min: \"min\", step: \"step\", appearance: \"appearance\", placeholder: \"placeholder\", label: \"label\" }, outputs: { change: \"change\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputCounterComponent),\n            multi: true\n        }\n    ], ngImport: i0, template: \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\n  <button mat-mini-fab (click)=\\\"decrement()\\\" [disabled]=\\\"value - step < min\\\">\\n    <mat-icon>remove</mat-icon>\\n  </button>\\n  <mat-form-field [appearance]=\\\"appearance\\\">\\n    <mat-label>\\n      {{label}}\\n    </mat-label>\\n    <input #input matInput [placeholder]=\\\"placeholder\\\" type=\\\"number\\\" [(ngModel)]=\\\"value\\\">\\n  </mat-form-field>\\n  <button mat-mini-fab (click)=\\\"increment()\\\" [disabled]=\\\"value + step > max\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\", styles: [\"input{text-align:center}\\n\"], dependencies: [{ kind: \"component\", type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: i3.MatLabel, selector: \"mat-label\" }, { kind: \"directive\", type: i4.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { kind: \"directive\", type: i5.DefaultLayoutDirective, selector: \"  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]\", inputs: [\"fxLayout\", \"fxLayout.xs\", \"fxLayout.sm\", \"fxLayout.md\", \"fxLayout.lg\", \"fxLayout.xl\", \"fxLayout.lt-sm\", \"fxLayout.lt-md\", \"fxLayout.lt-lg\", \"fxLayout.lt-xl\", \"fxLayout.gt-xs\", \"fxLayout.gt-sm\", \"fxLayout.gt-md\", \"fxLayout.gt-lg\"] }, { kind: \"directive\", type: i5.DefaultLayoutGapDirective, selector: \"  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\", inputs: [\"fxLayoutGap\", \"fxLayoutGap.xs\", \"fxLayoutGap.sm\", \"fxLayoutGap.md\", \"fxLayoutGap.lg\", \"fxLayoutGap.xl\", \"fxLayoutGap.lt-sm\", \"fxLayoutGap.lt-md\", \"fxLayoutGap.lt-lg\", \"fxLayoutGap.lt-xl\", \"fxLayoutGap.gt-xs\", \"fxLayoutGap.gt-sm\", \"fxLayoutGap.gt-md\", \"fxLayoutGap.gt-lg\"] }, { kind: \"directive\", type: i5.DefaultLayoutAlignDirective, selector: \"  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\", inputs: [\"fxLayoutAlign\", \"fxLayoutAlign.xs\", \"fxLayoutAlign.sm\", \"fxLayoutAlign.md\", \"fxLayoutAlign.lg\", \"fxLayoutAlign.xl\", \"fxLayoutAlign.lt-sm\", \"fxLayoutAlign.lt-md\", \"fxLayoutAlign.lt-lg\", \"fxLayoutAlign.lt-xl\", \"fxLayoutAlign.gt-xs\", \"fxLayoutAlign.gt-sm\", \"fxLayoutAlign.gt-md\", \"fxLayoutAlign.gt-lg\"] }, { kind: \"directive\", type: i6.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i6.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: InputCounterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-input-counter', providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => InputCounterComponent),\n                            multi: true\n                        }\n                    ], template: \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\n  <button mat-mini-fab (click)=\\\"decrement()\\\" [disabled]=\\\"value - step < min\\\">\\n    <mat-icon>remove</mat-icon>\\n  </button>\\n  <mat-form-field [appearance]=\\\"appearance\\\">\\n    <mat-label>\\n      {{label}}\\n    </mat-label>\\n    <input #input matInput [placeholder]=\\\"placeholder\\\" type=\\\"number\\\" [(ngModel)]=\\\"value\\\">\\n  </mat-form-field>\\n  <button mat-mini-fab (click)=\\\"increment()\\\" [disabled]=\\\"value + step > max\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\", styles: [\"input{text-align:center}\\n\"] }]\n        }], propDecorators: { _value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\nclass MatInputCounterModule {\n}\nMatInputCounterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputCounterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, declarations: [InputCounterComponent], imports: [MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        FlexModule,\n        FormsModule], exports: [InputCounterComponent] });\nMatInputCounterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, imports: [MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        FlexModule,\n        FormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [InputCounterComponent],\n                    imports: [\n                        MatButtonModule,\n                        MatIconModule,\n                        MatInputModule,\n                        FlexModule,\n                        FormsModule\n                    ],\n                    exports: [InputCounterComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of input-counter\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputCounterComponent, MatInputCounterModule };\n//# sourceMappingURL=angular-material-extensions-input-counter.mjs.map\n","map":{"version":3,"file":"angular-material-extensions-input-counter.mjs","sources":["../../../../projects/angular-material-extensions/input-counter/src/lib/input-counter.component.ts","../../../../projects/angular-material-extensions/input-counter/src/lib/input-counter.component.html","../../../../projects/angular-material-extensions/input-counter/src/lib/mat-input-counter.module.ts","../../../../projects/angular-material-extensions/input-counter/src/public-api.ts","../../../../projects/angular-material-extensions/input-counter/src/angular-material-extensions-input-counter.ts"],"sourcesContent":["import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n@Component({\n  selector: 'mat-input-counter',\n  templateUrl: './input-counter.component.html',\n  styleUrls: ['./input-counter.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputCounterComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputCounterComponent implements OnInit, ControlValueAccessor {\n\n  @Input()\n  _value: number;\n\n  @Input()\n  max: number;\n\n  @Input()\n  min: number;\n\n  @Input()\n  step = 1;\n\n  @Input()\n  appearance: MatFormFieldAppearance = 'standard';\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  label = 'Number';\n\n  @Output()\n  change: EventEmitter<number> = new EventEmitter<number>();\n\n  propagateChange = (_: any) => {\n  };\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.propagateChange(this._value);\n    this.change.emit(this._value);\n  }\n\n  ngOnInit(): void {\n  }\n\n  increment() {\n    if (!this.value) {\n      this.value = 0;\n    }\n    this.value += this.step;\n  }\n\n  decrement() {\n    if (!this.value) {\n      this.value = 0;\n    }\n    this.value -= this.step;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.value = obj;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"center center\">\n  <button mat-mini-fab (click)=\"decrement()\" [disabled]=\"value - step < min\">\n    <mat-icon>remove</mat-icon>\n  </button>\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>\n      {{label}}\n    </mat-label>\n    <input #input matInput [placeholder]=\"placeholder\" type=\"number\" [(ngModel)]=\"value\">\n  </mat-form-field>\n  <button mat-mini-fab (click)=\"increment()\" [disabled]=\"value + step > max\">\n    <mat-icon>add</mat-icon>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { InputCounterComponent } from './input-counter.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {FormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [InputCounterComponent],\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    FlexModule,\n    FormsModule\n  ],\n  exports: [InputCounterComponent]\n})\nexport class MatInputCounterModule { }\n","/*\n * Public API Surface of input-counter\n */\nexport * from './lib/input-counter.component';\nexport * from './lib/mat-input-counter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}},"fesm2015":{"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i6 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport * as i1 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i2 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i3 from '@angular/material/form-field';\nimport * as i4 from '@angular/material/input';\nimport { MatInputModule } from '@angular/material/input';\nimport * as i5 from '@angular/flex-layout';\nimport { FlexModule } from '@angular/flex-layout';\n\nclass InputCounterComponent {\n    constructor() {\n        this.step = 1;\n        this.appearance = 'standard';\n        this.label = 'Number';\n        this.change = new EventEmitter();\n        this.propagateChange = (_) => {\n        };\n    }\n    get value() {\n        return this._value;\n    }\n    set value(val) {\n        this._value = val;\n        this.propagateChange(this._value);\n        this.change.emit(this._value);\n    }\n    ngOnInit() {\n    }\n    increment() {\n        if (!this.value) {\n            this.value = 0;\n        }\n        this.value += this.step;\n    }\n    decrement() {\n        if (!this.value) {\n            this.value = 0;\n        }\n        this.value -= this.step;\n    }\n    writeValue(obj) {\n        if (obj) {\n            this.value = obj;\n        }\n    }\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n    registerOnTouched(fn) {\n    }\n    setDisabledState(isDisabled) {\n    }\n}\nInputCounterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: InputCounterComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nInputCounterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.5\", type: InputCounterComponent, selector: \"mat-input-counter\", inputs: { _value: \"_value\", max: \"max\", min: \"min\", step: \"step\", appearance: \"appearance\", placeholder: \"placeholder\", label: \"label\" }, outputs: { change: \"change\" }, providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => InputCounterComponent),\n            multi: true\n        }\n    ], ngImport: i0, template: \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\n  <button mat-mini-fab (click)=\\\"decrement()\\\" [disabled]=\\\"value - step < min\\\">\\n    <mat-icon>remove</mat-icon>\\n  </button>\\n  <mat-form-field [appearance]=\\\"appearance\\\">\\n    <mat-label>\\n      {{label}}\\n    </mat-label>\\n    <input #input matInput [placeholder]=\\\"placeholder\\\" type=\\\"number\\\" [(ngModel)]=\\\"value\\\">\\n  </mat-form-field>\\n  <button mat-mini-fab (click)=\\\"increment()\\\" [disabled]=\\\"value + step > max\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\", styles: [\"input{text-align:center}\\n\"], dependencies: [{ kind: \"component\", type: i1.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"component\", type: i2.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { kind: \"component\", type: i3.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { kind: \"directive\", type: i3.MatLabel, selector: \"mat-label\" }, { kind: \"directive\", type: i4.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"name\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { kind: \"directive\", type: i5.DefaultLayoutDirective, selector: \"  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]\", inputs: [\"fxLayout\", \"fxLayout.xs\", \"fxLayout.sm\", \"fxLayout.md\", \"fxLayout.lg\", \"fxLayout.xl\", \"fxLayout.lt-sm\", \"fxLayout.lt-md\", \"fxLayout.lt-lg\", \"fxLayout.lt-xl\", \"fxLayout.gt-xs\", \"fxLayout.gt-sm\", \"fxLayout.gt-md\", \"fxLayout.gt-lg\"] }, { kind: \"directive\", type: i5.DefaultLayoutGapDirective, selector: \"  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\", inputs: [\"fxLayoutGap\", \"fxLayoutGap.xs\", \"fxLayoutGap.sm\", \"fxLayoutGap.md\", \"fxLayoutGap.lg\", \"fxLayoutGap.xl\", \"fxLayoutGap.lt-sm\", \"fxLayoutGap.lt-md\", \"fxLayoutGap.lt-lg\", \"fxLayoutGap.lt-xl\", \"fxLayoutGap.gt-xs\", \"fxLayoutGap.gt-sm\", \"fxLayoutGap.gt-md\", \"fxLayoutGap.gt-lg\"] }, { kind: \"directive\", type: i5.DefaultLayoutAlignDirective, selector: \"  [fxLayoutAlign], [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md],  [fxLayoutAlign.lg], [fxLayoutAlign.xl], [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md],  [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl], [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm],  [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\", inputs: [\"fxLayoutAlign\", \"fxLayoutAlign.xs\", \"fxLayoutAlign.sm\", \"fxLayoutAlign.md\", \"fxLayoutAlign.lg\", \"fxLayoutAlign.xl\", \"fxLayoutAlign.lt-sm\", \"fxLayoutAlign.lt-md\", \"fxLayoutAlign.lt-lg\", \"fxLayoutAlign.lt-xl\", \"fxLayoutAlign.gt-xs\", \"fxLayoutAlign.gt-sm\", \"fxLayoutAlign.gt-md\", \"fxLayoutAlign.gt-lg\"] }, { kind: \"directive\", type: i6.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i6.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i6.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i6.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: InputCounterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-input-counter', providers: [\n                        {\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => InputCounterComponent),\n                            multi: true\n                        }\n                    ], template: \"<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"5px\\\" fxLayoutAlign=\\\"center center\\\">\\n  <button mat-mini-fab (click)=\\\"decrement()\\\" [disabled]=\\\"value - step < min\\\">\\n    <mat-icon>remove</mat-icon>\\n  </button>\\n  <mat-form-field [appearance]=\\\"appearance\\\">\\n    <mat-label>\\n      {{label}}\\n    </mat-label>\\n    <input #input matInput [placeholder]=\\\"placeholder\\\" type=\\\"number\\\" [(ngModel)]=\\\"value\\\">\\n  </mat-form-field>\\n  <button mat-mini-fab (click)=\\\"increment()\\\" [disabled]=\\\"value + step > max\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n</div>\\n\", styles: [\"input{text-align:center}\\n\"] }]\n        }], propDecorators: { _value: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\nclass MatInputCounterModule {\n}\nMatInputCounterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputCounterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, declarations: [InputCounterComponent], imports: [MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        FlexModule,\n        FormsModule], exports: [InputCounterComponent] });\nMatInputCounterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, imports: [MatButtonModule,\n        MatIconModule,\n        MatInputModule,\n        FlexModule,\n        FormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.5\", ngImport: i0, type: MatInputCounterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [InputCounterComponent],\n                    imports: [\n                        MatButtonModule,\n                        MatIconModule,\n                        MatInputModule,\n                        FlexModule,\n                        FormsModule\n                    ],\n                    exports: [InputCounterComponent]\n                }]\n        }] });\n\n/*\n * Public API Surface of input-counter\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputCounterComponent, MatInputCounterModule };\n//# sourceMappingURL=angular-material-extensions-input-counter.mjs.map\n","map":{"version":3,"file":"angular-material-extensions-input-counter.mjs","sources":["../../../../projects/angular-material-extensions/input-counter/src/lib/input-counter.component.ts","../../../../projects/angular-material-extensions/input-counter/src/lib/input-counter.component.html","../../../../projects/angular-material-extensions/input-counter/src/lib/mat-input-counter.module.ts","../../../../projects/angular-material-extensions/input-counter/src/public-api.ts","../../../../projects/angular-material-extensions/input-counter/src/angular-material-extensions-input-counter.ts"],"sourcesContent":["import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {MatFormFieldAppearance} from '@angular/material/form-field';\n\n@Component({\n  selector: 'mat-input-counter',\n  templateUrl: './input-counter.component.html',\n  styleUrls: ['./input-counter.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputCounterComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputCounterComponent implements OnInit, ControlValueAccessor {\n\n  @Input()\n  _value: number;\n\n  @Input()\n  max: number;\n\n  @Input()\n  min: number;\n\n  @Input()\n  step = 1;\n\n  @Input()\n  appearance: MatFormFieldAppearance = 'standard';\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  label = 'Number';\n\n  @Output()\n  change: EventEmitter<number> = new EventEmitter<number>();\n\n  propagateChange = (_: any) => {\n  };\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.propagateChange(this._value);\n    this.change.emit(this._value);\n  }\n\n  ngOnInit(): void {\n  }\n\n  increment() {\n    if (!this.value) {\n      this.value = 0;\n    }\n    this.value += this.step;\n  }\n\n  decrement() {\n    if (!this.value) {\n      this.value = 0;\n    }\n    this.value -= this.step;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this.value = obj;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutGap=\"5px\" fxLayoutAlign=\"center center\">\n  <button mat-mini-fab (click)=\"decrement()\" [disabled]=\"value - step < min\">\n    <mat-icon>remove</mat-icon>\n  </button>\n  <mat-form-field [appearance]=\"appearance\">\n    <mat-label>\n      {{label}}\n    </mat-label>\n    <input #input matInput [placeholder]=\"placeholder\" type=\"number\" [(ngModel)]=\"value\">\n  </mat-form-field>\n  <button mat-mini-fab (click)=\"increment()\" [disabled]=\"value + step > max\">\n    <mat-icon>add</mat-icon>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { InputCounterComponent } from './input-counter.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {FormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [InputCounterComponent],\n  imports: [\n    MatButtonModule,\n    MatIconModule,\n    MatInputModule,\n    FlexModule,\n    FormsModule\n  ],\n  exports: [InputCounterComponent]\n})\nexport class MatInputCounterModule { }\n","/*\n * Public API Surface of input-counter\n */\nexport * from './lib/input-counter.component';\nexport * from './lib/mat-input-counter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}}}